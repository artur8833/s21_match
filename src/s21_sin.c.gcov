        -:    0:Source:math/s21_sin.c
        -:    1:#include "../s21_math.h"
        -:    2:
     3807:    3:long double s21_sin(double x) {
     3807:    4:  long double res = 0;
        -:    5:
     3807:    6:  if (S21_IS_NAN(x))
        2:    7:    res = x;
     3805:    8:  else if (S21_IS_INF(x))
        4:    9:    res = -S21_NAN;
     3801:   10:  else if (x == S21_PI)
        3:   11:    res = S21_ZERO_POSITIVE;
     3798:   12:  else if (x == -S21_PI)
        1:   13:    res = S21_ZERO_NEGATIVE;
     3797:   14:  else if (x == 1)
        2:   15:    res = S21_PI / 4;
     3795:   16:  else if (x == -1)
        2:   17:    res = -(S21_PI / 4);
        -:   18:  else {
     9068:   19:    while (s21_fabs(x) - 2 * S21_PI > 0) {
     5275:   20:      x += 2 * S21_PI * x / s21_fabs(x) * -1;
        -:   21:    }
     3793:   22:    int sign = 1;
     3793:   23:    double xx = x * x;
     3793:   24:    double pw = x;
     3793:   25:    double fti = 1.0;
   383093:   26:    for (int i = 1; i < 200; i += 2) {
   379300:   27:      fti *= i;
   379300:   28:      res += sign * pw / fti;
   379300:   29:      fti *= (i + 1);
   379300:   30:      sign = -sign;
   379300:   31:      pw *= xx;
        -:   32:    }
        -:   33:  }
     3807:   34:  return res;
        -:   35:}
