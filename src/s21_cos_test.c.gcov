        -:    0:Source:unit_tests/s21_cos_test.c
        -:    1:#include "s21_test.h"
        -:    2:
        1:    3:START_TEST(cosTest1) {
        1:    4:  int testValue1 = 100;
        1:    5:  int testValue2 = -3003;
        1:    6:  double testValue3 = 0.0005;
        1:    7:  double testValue4 = 0.98439849385;
        1:    8:  double testValue5 = S21_PI;
        1:    9:  double testValue6 = -S21_PI;
        1:   10:  double testValue7 = S21_PI / 2;
        1:   11:  double testValue8 = -S21_PI / 2;
       1*:   12:  ck_assert_ldouble_eq_tol(s21_cos(testValue1), cos(testValue1), 1e-6);
       1*:   13:  ck_assert_ldouble_eq_tol(s21_cos(testValue2), cos(testValue2), 1e-6);
       1*:   14:  ck_assert_ldouble_eq_tol(s21_cos(testValue3), cos(testValue3), 1e-6);
       1*:   15:  ck_assert_ldouble_eq_tol(s21_cos(testValue4), cos(testValue4), 1e-6);
       1*:   16:  ck_assert_ldouble_eq_tol(s21_cos(testValue5), cos(testValue5), 1e-6);
       1*:   17:  ck_assert_ldouble_eq_tol(s21_cos(testValue6), cos(testValue6), 1e-6);
       1*:   18:  ck_assert_ldouble_eq_tol(s21_cos(testValue7), cos(testValue7), 1e-6);
       1*:   19:  ck_assert_ldouble_eq_tol(s21_cos(testValue8), cos(testValue8), 1e-6);
        -:   20:
       1*:   21:  ck_assert(S21_IS_NAN(s21_cos(NAN)) == S21_IS_NAN(cos(NAN)));
       1*:   22:  ck_assert(S21_IS_NAN(s21_cos(INFINITY)) == S21_IS_NAN(cos(INFINITY)));
        1:   23:}
        -:   24:END_TEST;
        -:   25:
        1:   26:START_TEST(cosTest2) {
        1:   27:  double step = 0.01;
     3143:   28:  for (double i = -5 * S21_PI; i <= 5 * S21_PI; i += step) {
    3142*:   29:    ck_assert_ldouble_eq_tol(s21_cos(i), cos(i), 1e-6);
        -:   30:  }
        1:   31:}
        -:   32:END_TEST
        -:   33:
       36:   34:Suite *cosTest(void) {
       36:   35:  Suite *s = suite_create("\033[45mCos test\033[0m");
       36:   36:  TCase *tc = tcase_create("Cos test");
        -:   37:
       36:   38:  tcase_add_test(tc, cosTest1);
       36:   39:  tcase_add_test(tc, cosTest2);
        -:   40:
       36:   41:  suite_add_tcase(s, tc);
       36:   42:  return s;
        -:   43:}
