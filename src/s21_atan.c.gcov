        -:    0:Source:math/s21_atan.c
        -:    1:#include "../s21_math.h"
        -:    2:
       21:    3:long double s21_atan(double x) {
       21:    4:  long double res = 0;
       21:    5:  long double res2 = 0;
       21:    6:  if (S21_IS_NAN(x))
        2:    7:    res = x;
       19:    8:  else if (isPOS_INF(x))
        2:    9:    res = S21_PI / 2;
       17:   10:  else if (isNEG_INF(x))
        2:   11:    res = (S21_PI / 2);
       15:   12:  else if (x == 1)
        1:   13:    res = S21_PI / 4;
       14:   14:  else if (x == -1)
        1:   15:    res = -(S21_PI / 4);
        -:   16:
        -:   17:  else {
       13:   18:    if (x > -1 && x < 1) {
     3507:   19:      for (int i = 0; i < 500; i++) {
     3500:   20:        res += (s21_pow(-1, i) * s21_pow(x, 2 * i + 1)) / (i * 2 + 1);
        -:   21:      }
        -:   22:    } else {
     3006:   23:      for (int i = 0; i < 500; i++) {
     3000:   24:        res2 += (s21_pow(-1, i) * s21_pow(x, -1 - (2 * i))) / (i * 2 + 1);
        -:   25:      }
        6:   26:      res = ((S21_PI * s21_sqrt(s21_pow(x, 2))) / (2 * x)) - res2;
        -:   27:    }
        -:   28:  }
       21:   29:  return res;
        -:   30:}
