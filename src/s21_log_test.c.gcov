        -:    0:Source:unit_tests/s21_log_test.c
        -:    1:#include "s21_test.h"
        -:    2:
        1:    3:START_TEST(logTest1) {
        1:    4:  double testValue1 = S21_EXP;
        1:    5:  double testValue2 = 10;
        1:    6:  double testValue3 = 3;
       1*:    7:  ck_assert_ldouble_eq_tol(s21_log(testValue1), log(testValue1), 1e-6);
       1*:    8:  ck_assert_ldouble_eq_tol(s21_log(testValue2), log(testValue2), 1e-6);
       1*:    9:  ck_assert_ldouble_eq_tol(s21_log(testValue3), log(testValue3), 1e-6);
     1001:   10:  for (double i = 0.1; i < 100.0; i += 0.1) {
    1000*:   11:    ck_assert_ldouble_eq_tol(s21_log(i), log(i), 1e-6);
        -:   12:  }
        1:   13:}
        -:   14:END_TEST
        -:   15:
        1:   16:START_TEST(logTest2) {
        1:   17:  double testValue1 = -0.46376;
        1:   18:  double testValue2 = 0;
        1:   19:  double testValue3 = 0.00001;
        1:   20:  double testValue4 = -4;
       1*:   21:  ck_assert_double_nan(s21_log(testValue1));
       1*:   22:  ck_assert_ldouble_infinite(s21_log(testValue2));
       1*:   23:  ck_assert_ldouble_eq_tol(s21_log(testValue3), log(testValue3), 0.00001);
       1*:   24:  ck_assert(S21_IS_NAN(s21_log(testValue4)) == S21_IS_NAN(log(testValue4)));
       1*:   25:  ck_assert_double_nan(s21_log(NAN));
       1*:   26:  ck_assert_double_nan(s21_log(S21_NAN));
       1*:   27:  ck_assert_double_nan(s21_log(-S21_NAN));
       1*:   28:  ck_assert_ldouble_infinite(s21_log(S21_INF_POSITIVE));
       1*:   29:  ck_assert_ldouble_nan(s21_log(S21_INF_NEGATIVE));
       1*:   30:  ck_assert(S21_IS_NAN(s21_log(1)) == S21_IS_NAN(log(1)));
       1*:   31:  ck_assert(S21_IS_NAN(s21_log(NAN)) == S21_IS_NAN(log(NAN)));
        1:   32:}
        -:   33:END_TEST
        -:   34:
       36:   35:Suite *logTest(void) {
       36:   36:  Suite *s = suite_create("\033[45mLog test\033[0m");
       36:   37:  TCase *tc = tcase_create("Log test");
        -:   38:
       36:   39:  tcase_add_test(tc, logTest1);
       36:   40:  tcase_add_test(tc, logTest2);
        -:   41:
       36:   42:  suite_add_tcase(s, tc);
       36:   43:  return s;
        -:   44:}
